on:
  workflow_call:
    inputs:
      i:
        required: true
        type: number
      type:
        required: true
        type: string
      multiplatform:
        required: false
        type: boolean
        default: false
      sign:
        required: false
        type: boolean
        default: false
jobs:
  build:
    name: Add temporary packages for testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Install the cosign tool https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: ${{ inputs.sign }}
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da #v3.7.0
        with:
          cosign-release: 'v2.4.1'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: lower case repository_owner
        id: lower_case_repository_owner
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ github.repository_owner }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: ./CICD/Dockerfile_temp
          tags: ghcr.io/${{ steps.lower_case_repository_owner.outputs.lowercase }}/${{ inputs.type }}:${{ inputs.i }}
          build-args: |
            I=${{ inputs.i }}
          push: true
          platforms: ${{ inputs.multiplatform && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          # Disable automatic manifest list by disabling attestation facts generation
          provenance: ${{ !inputs.sign }}
          sbom:       ${{ !inputs.sign }}
      # Sign the resulting Docker image digest https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ inputs.sign }}
        env:
          TAGS: ghcr.io/${{ steps.lower_case_repository_owner.outputs.lowercase }}/${{ inputs.type }}:${{ inputs.i }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
